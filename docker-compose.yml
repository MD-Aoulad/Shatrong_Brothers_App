# Docker Compose configuration for Forex Fundamental Data App
services:
  backend:
    build:
      context: ./backend
    image: fx-backend:latest
    container_name: fx-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - forex-network
 
  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8001
      - REACT_APP_BIAS_API_URL=http://localhost:8080
    depends_on:
      - api-gateway
      - websocket
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - forex-network

  # API Gateway Service
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your-super-secret-jwt-key
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - FRONTEND_URL=http://localhost:3000
      - PORT=8000
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    networks:
      - forex-network

  # WebSocket Service
  websocket:
    build: ./websocket
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - PORT=8001
    depends_on:
      - postgres
      - redis
    volumes:
      - ./websocket:/app
      - /app/node_modules
    networks:
      - forex-network

  # Data Collection Service
  data-collection:
    build: ./data-collection
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - NEWS_API_KEY=demo-key
      - ALPHA_VANTAGE_API_KEY=demo-key
      - FRED_API_KEY=demo-key
      - TRADING_ECONOMICS_API_KEY=demo-key
      - META_API_TOKEN=demo-token
      - PORT=8002
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./data-collection:/app
      - /app/node_modules
    networks:
      - forex-network

  # Data Processing Service
  data-processing:
    build: ./data-processing
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - PORT=8003
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./data-processing:/app
      - /app/node_modules
    networks:
      - forex-network

  # Analytics Service
  analytics:
    build: ./analytics
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/forex_app
      - REDIS_URL=redis://redis:6379
      - PORT=8004
    depends_on:
      - postgres
      - redis
    volumes:
      - ./analytics:/app
      - /app/node_modules
    networks:
      - forex-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=forex_app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/enhanced_schema.sql:/docker-entrypoint-initdb.d/01_enhanced_schema.sql
      - ./database/init.sql:/docker-entrypoint-initdb.d/02_sample_data.sql
    networks:
      - forex-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - forex-network

  # Kafka Message Queue
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - forex-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - forex-network

  # InfluxDB for time-series data
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password123
      - DOCKER_INFLUXDB_INIT_ORG=forex
      - DOCKER_INFLUXDB_INIT_BUCKET=forex_data
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - forex-network

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  forex-network:
    driver: bridge
